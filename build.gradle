
  dependencyScalaVersion = "2.10"
  scalaVersion = "2.10.6"
  sparkVersion = "1.6.2"
  hbaseVersion = "1.0.0-cdh5.5.2"
  htraceVersion = "3.2.0-incubating"
  cdhVersion="1.0.0-cdh5.5.2"
  mavenCentral()
  mavenLocal()
  maven {
    url = "https://repository.cloudera.com/artifactory/cloudera-repos"
  }
  maven {
    url = "http://maven.oculus.local:8080/archiva/repository/snapshots"
  }
  maven {
    url = "http://maven.oculus.local:8080/archiva/repository/internal"
  }
  maxParallelForks = 1
  jvmArgs += ["-XX:MaxPermSize=512m", "-Xmx1000m"]
  if (project.hasProperty('excludeIoTests')) {
    tags {
      exclude 's3.test'
      exclude 'hbc.test'
      exclude 'fileio.test'
    }
  } else if (!project.hasProperty('includeExternalTests')) {
    tags {
      exclude 's3.test'
      exclude 'hbc.test'
    }
  }

  // A function to exclude various HBase dependencies we don't want.
  hbaseDependency = {dependencyName, config="compile" ->
    getDependencies().add(config, "org.apache.hbase:"+dependencyName+":$hbaseVersion", {
      exclude group: "asm", module: "asm"
      exclude group: "org.slf4j", module: "slf4j-api"
      exclude group: "org.slf4j", module: "slf4j-log4j12"
      exclude group: "org.mortbay.jetty"
      exclude group: "org.jboss.netty", module: "netty"
      exclude group: "io.netty", module: "netty"
    })
  }
  // A function that defines a project dependency if the useProjects option is set, otherwise fetches
  // from maven.
  optionalProjectDependency = { dependencyName ->
    if (project.hasProperty('useProjects')) {
      depends = getDependencies()
      projectName = ":"+depends.create(dependencyName).getName()
      dependencies {
        compile project(projectName)
      }
    } else {
      dependencies {
        compile dependencyName
      }
    }
  }
  optionalProjectDependency("software.uncharted.salt:salt-core:3.0.1")
  optionalProjectDependency("software.uncharted.sparkpipe:sparkpipe-core:0.9.7")
  optionalProjectDependency("software.uncharted.sparkpipe:sparkpipe-salt-ops:3.0.0")
  optionalProjectDependency("software.uncharted.xdata:xdata-pipeline-ops:0.1-SNAPSHOT")
  main {
    baseName = 'xdata-graph'
    contents {
      // Copy the run scripts over
      into ("scripts"){
        from("src/scripts")
        fileMode 0755
      }
